--Request 1
SELECT distinct market
FROM   dim_customer
WHERE (customer = 'Atliq Exclusive') AND (region = 'APAC');

--Request 2

 with cte1 as (
         select count(distinct product_code) as unique_product_2020
         from fact_sales_monthly
         where fiscal_year = 2020
         ), 
         cte2 as (
         select count(distinct product_code) as unique_product_2021
         from fact_sales_monthly
         where fiscal_year = 2021 
         )
        select 
              unique_product_2020,
              unique_product_2021,
              (unique_product_2021-unique_product_2020)*100/unique_product_2020 as pct_change
        from cte1
        cross join cte2
        ;

--Request 3

SELECT DISTINCT
    segment, COUNT(product_code) AS product_count
FROM
    dim_product
GROUP BY segment
ORDER BY product_count DESC



--Request 4

with segment_cte as(
select segment, fiscal_year, 
COUNT(distinct p.product_code) as product_count
from fact_sales_monthly f join dim_product p on p.product_code = f.product_code group by segment,fiscal_year
)
select segment_2020.segment AS segment, 
segment_2020.product_count AS product_count_2020, 
segment_2021.product_count AS product_count_2021,
(segment_2021.product_count - segment_2020.product_count) as difference 
from
(select segment, product_count from segment_cte where fiscal_year = 2020) as segment_2020
JOIN
(select segment, product_count from segment_cte where fiscal_year = 2021) as segment_2021
on
segment_2020.segment = segment_2021.segment
order by difference desc

--Request 5

select * from fact_manufacturing_cost m join dim_product p on m.product_code = p.product_code

--get lowest and highest manufacturing cost
with min_max_cost as(
select min(manufacturing_cost)as min_cost, max(manufacturing_cost) as max_cost from fact_manufacturing_cost
),
lowest_cost_product as(
select f.product_code, p.product, f.manufacturing_cost 
from 
fact_manufacturing_cost f join dim_product p 
on f.product_code = p.product_code
where f.manufacturing_cost = (select min_cost from min_max_cost)
),
highest_cost_product as(
select f.product_code, p.product, f.manufacturing_cost 
from 
fact_manufacturing_cost f join dim_product p 
on f.product_code = p.product_code
where f.manufacturing_cost = (select max_cost from min_max_cost)
)
--combine all min and max cost
select * from lowest_cost_product
union all
select * from highest_cost_product;

--Request 6

select top 5 f.customer_Code, c.customer, 
concat(Round(avg(pre_invoice_discount_pct) * 100, 2), '%') as average_discount_percentage
from
fact_pre_invoice_deductions f join dim_customer c on
f.customer_code = c.customer_code 
where f.fiscal_year = 2021 and market = 'India'
group by f.customer_code, c.customer
order by avg(f.pre_invoice_discount_pct) desc;


--Request 7

select datename(month, f.date) as month, year(f.date) as year,
sum(f.sold_quantity * g.gross_price) as gross_sales_amount 
from fact_sales_monthly f join fact_gross_price g on
f.product_code = g.product_code 
join dim_customer d on d.customer_code = f.customer_code
where d.customer = 'Atliq Exclusive' 
group by datename(month, f.date),YEAR(f.date) ORDER BY Year;

--Request 8
with sales_with_quarters as(
select MONTH(date) as Month,
YEAR(date) as Year,
sold_quantity,
CASE
when MONTH(date) in (9,10,11) then 'Q1'
when MONTH(date) in (12,1,2) then 'Q2'
when MONTH(date) in (3,4,5) then 'Q3'
when MONTH(date) in (6,7,8) then 'Q4'
END AS quarter
from fact_sales_monthly
where YEAR(Date) = 2020
)
select quarter,
sum(sold_quantity) as total_sold_quantity
from sales_with_quarters
group by quarter
order by total_sold_quantity desc

--Request 9

	with gross_sales AS(
	select channel, round(sum((gross_price * sold_quantity)/1000000),2) as gross_sales_mln
	from dim_customer dc join fact_sales_monthly fsm 
	on dc.customer_code = fsm.customer_code
	join fact_gross_price fgp on fsm.product_code = fgp.product_code
	where fsm.fiscal_year = 2021 group by channel
	),
	total_sales as(
	select sum(gross_sales_mln) as overall_gross_sales
from gross_sales
	)
	select gs.channel, gs.gross_sales_mln,
	round((gs.gross_sales_mln * 100) / ts.overall_gross_sales,2) as percentage
	from gross_sales gs 
	cross join
	total_Sales ts
	order by gs.gross_sales_mln desc


--Request 10

WITH ranked_products AS (
    SELECT 
        dp.division,
        fsm.product_code,
        concat(dp.product, '(', dp.variant, ')') as product,
        SUM(fsm.sold_quantity) AS total_sold_quantity,
        RANK() OVER (
            PARTITION BY dp.division 
            ORDER BY SUM(fsm.sold_quantity) DESC
        ) AS rank_order
    FROM 
        dim_product dp
    JOIN 
        fact_sales_monthly fsm 
    ON 
        dp.product_code = fsm.product_code
    WHERE 
        fsm.fiscal_year = 2021
    GROUP BY 
        dp.division, 
        fsm.product_code, 
        product, variant
)
SELECT 
    division,
    product_code,
    product,
    total_sold_quantity,
    rank_order
FROM 
    ranked_products
WHERE 
    rank_order <= 3
ORDER BY 
    division,
    rank_order;

